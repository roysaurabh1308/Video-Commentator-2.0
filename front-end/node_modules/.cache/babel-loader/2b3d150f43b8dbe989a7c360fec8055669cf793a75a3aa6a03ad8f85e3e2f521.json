{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/video-captioning-frontend/src/LiveStream.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LiveStream() {\n  _s();\n  const [streamUrl, setStreamUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [processedFrameUrl, setProcessedFrameUrl] = useState(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Function to access the user's camera\n  async function handleStartCamera() {\n    try {\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = mediaStream;\n      }\n    } catch (error) {\n      console.error('Error accessing the camera:', error);\n      setError('Error accessing the camera');\n    }\n  }\n\n  // Function to update the stream URL state\n  function handleLinkChange(event) {\n    setStreamUrl(event.target.value);\n    setError(null); // Clear any previous error\n  }\n\n  // Function to load the video stream from the URL\n  function handleLoadStream() {\n    if (videoRef.current) {\n      setLoading(true);\n      videoRef.current.src = streamUrl;\n      videoRef.current.load();\n      videoRef.current.onloadeddata = () => {\n        setLoading(false);\n        setError(null); // Clear any previous error\n        captureFrames();\n      };\n      videoRef.current.onerror = () => {\n        setLoading(false);\n        setError('Error loading video from URL');\n      };\n    }\n  }\n\n  // Function to capture frames from the video\n  function captureFrames() {\n    if (videoRef.current && canvasRef.current) {\n      const context = canvasRef.current.getContext('2d');\n      const captureInterval = 1000; // Capture frame every second\n\n      const capture = () => {\n        if (videoRef.current.paused || videoRef.current.ended) {\n          return;\n        }\n        context.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        canvasRef.current.toBlob(sendFrameToBackend, 'image/jpeg');\n        setTimeout(capture, captureInterval);\n      };\n      capture();\n    }\n  }\n\n  // Function to send frame to the backend\n  async function sendFrameToBackend(blob) {\n    const formData = new FormData();\n    formData.append('frame', blob);\n    try {\n      const response = await fetch('http://localhost:5000/process-frame', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const blobResponse = await response.blob();\n      const objectUrl = URL.createObjectURL(blobResponse);\n      setProcessedFrameUrl(objectUrl);\n    } catch (error) {\n      console.error('Error sending frame to backend:', error);\n    }\n  }\n\n  // Cleanup function to stop the camera when the component unmounts\n  useEffect(() => {\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"live-stream-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Live Video Stream\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: streamUrl,\n        onChange: handleLinkChange,\n        placeholder: \"Enter streaming URL (e.g., http://example.com/stream.m3u8)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadStream,\n        disabled: loading,\n        children: \"Load Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartCamera,\n        children: \"Access Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading video...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      controls: true,\n      style: {\n        width: '100%',\n        marginTop: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"640\",\n      height: \"480\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), processedFrameUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Processed Frame\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: processedFrameUrl,\n        alt: \"Processed Frame\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(LiveStream, \"4wnBf+DSFEIsdD71KtnyHyjHwHs=\");\n_c = LiveStream;\nexport default LiveStream;\nvar _c;\n$RefreshReg$(_c, \"LiveStream\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","LiveStream","_s","streamUrl","setStreamUrl","loading","setLoading","error","setError","processedFrameUrl","setProcessedFrameUrl","videoRef","canvasRef","handleStartCamera","mediaStream","navigator","mediaDevices","getUserMedia","video","current","srcObject","console","handleLinkChange","event","target","value","handleLoadStream","src","load","onloadeddata","captureFrames","onerror","context","getContext","captureInterval","capture","paused","ended","drawImage","width","height","toBlob","sendFrameToBackend","setTimeout","blob","formData","FormData","append","response","fetch","method","body","ok","Error","blobResponse","objectUrl","URL","createObjectURL","tracks","getTracks","forEach","track","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","disabled","ref","autoPlay","controls","style","marginTop","display","alt","_c","$RefreshReg$"],"sources":["/home/user/Desktop/video-captioning-frontend/src/LiveStream.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nfunction LiveStream() {\n  const [streamUrl, setStreamUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [processedFrameUrl, setProcessedFrameUrl] = useState(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Function to access the user's camera\n  async function handleStartCamera() {\n    try {\n      const mediaStream = await navigator.mediaDevices.getUserMedia({ video: true });\n      if (videoRef.current) {\n        videoRef.current.srcObject = mediaStream;\n      }\n    } catch (error) {\n      console.error('Error accessing the camera:', error);\n      setError('Error accessing the camera');\n    }\n  }\n\n  // Function to update the stream URL state\n  function handleLinkChange(event) {\n    setStreamUrl(event.target.value);\n    setError(null);  // Clear any previous error\n  }\n\n  // Function to load the video stream from the URL\n  function handleLoadStream() {\n    if (videoRef.current) {\n      setLoading(true);\n      videoRef.current.src = streamUrl;\n      videoRef.current.load();\n      videoRef.current.onloadeddata = () => {\n        setLoading(false);\n        setError(null);  // Clear any previous error\n        captureFrames();\n      };\n      videoRef.current.onerror = () => {\n        setLoading(false);\n        setError('Error loading video from URL');\n      };\n    }\n  }\n\n  // Function to capture frames from the video\n  function captureFrames() {\n    if (videoRef.current && canvasRef.current) {\n      const context = canvasRef.current.getContext('2d');\n      const captureInterval = 1000; // Capture frame every second\n\n      const capture = () => {\n        if (videoRef.current.paused || videoRef.current.ended) {\n          return;\n        }\n        context.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        canvasRef.current.toBlob(sendFrameToBackend, 'image/jpeg');\n        setTimeout(capture, captureInterval);\n      };\n\n      capture();\n    }\n  }\n\n  // Function to send frame to the backend\n  async function sendFrameToBackend(blob) {\n    const formData = new FormData();\n    formData.append('frame', blob);\n\n    try {\n      const response = await fetch('http://localhost:5000/process-frame', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const blobResponse = await response.blob();\n      const objectUrl = URL.createObjectURL(blobResponse);\n      setProcessedFrameUrl(objectUrl);\n    } catch (error) {\n      console.error('Error sending frame to backend:', error);\n    }\n  }\n\n  // Cleanup function to stop the camera when the component unmounts\n  useEffect(() => {\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"live-stream-container\">\n      <h1>Live Video Stream</h1>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={streamUrl}\n          onChange={handleLinkChange}\n          placeholder=\"Enter streaming URL (e.g., http://example.com/stream.m3u8)\"\n        />\n        <button onClick={handleLoadStream} disabled={loading}>Load Stream</button>\n      </div>\n      <div className=\"button-container\">\n        <button onClick={handleStartCamera}>Access Camera</button>\n      </div>\n      {loading && <div>Loading video...</div>}\n      {error && <div className=\"error\">{error}</div>}\n      <video\n        ref={videoRef}\n        autoPlay={true}\n        controls={true}\n        style={{ width: '100%', marginTop: '20px' }}\n      />\n      <canvas ref={canvasRef} width=\"640\" height=\"480\" style={{ display: 'none' }}></canvas>\n      {processedFrameUrl && (\n        <div>\n          <h2>Processed Frame</h2>\n          <img src={processedFrameUrl} alt=\"Processed Frame\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default LiveStream;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}